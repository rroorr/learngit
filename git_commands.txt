mkdir 目录名    创建目录
cd 目录名   	切换到目录
pwd  			显示当前目录

git init 			把当前目录变成Git仓库
git add	file1.txt file2.txt	把file1.txt和file2.txt添加到暂存区	
git commit -m "注释"	把暂存区文件提交到仓库


git add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，
git commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区

版本回退：
git reset --hard HEAD^
git reset --hard HEAD^^
git reset --hard HEAD~100
git reset --hard 版本号

git reflog 查询命令历史，包括commit、checkout、reset等，能查到每次提交的commit_id
q 	返回。当提示“No next tag (press RETURN)”时候，只需要输入q即可返回


git diff是比较工作区与暂存区的区别；
git diff --cached是比较暂存区与版本库的区别
git diff HEAD 查看工作区和版本库里最新版本的差异


关于撤销修改的命令：
git checkout -- file.txt（用git restore 代替）	
			把文件在工作区的修改全部撤销。
			1）如果暂存区有版本，则用暂存区里的版本替换工作区的版本
			2）如果暂存区没有版本，则用版本库里的版本替换工作区的版本。注意 -- 前后都有空格；
			如果修改已经提交到暂存区，则无法撤销修改，只能撤销上次add之后的修改

git reset HEAD file.txt（用git restore --staged 代替）		
			把暂存区的修改撤销掉，暂存区回到add之前的状态，但工作区不受影响

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git restore file.txt
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，
第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，用git reset --hard 版本号


